

from tkinter import *
from tkinter import messagebox
import random  # CORREGIDO: import correcto

class Principal():
    def __init__(self):
        self.ven = Tk()
        self.ven.title('Programa 6 con ventanas GRID')
        self.ven.geometry('550x250')
        self.a = 0
        self.b = 0
        self.lista = []
        self.aux1 = 0
        self.aux2 = 0
        self.cont = 0
        self.inicio()  # CORREGIDO: llamar a inicio

    def inicio(self):
        l1 = Label(self.ven, text="Programa 10")
        l1.place(x=150, y=20)
        l2 = Label(self.ven, text="Escribe un numero")
        l2.place(x=100, y=50)
        self.n1 = Entry(self.ven)
        self.n1.place(x=100, y=75)
        l3 = Label(self.ven, text="Escribe un numero")
        l3.place(x=250, y=50)
        # CORREGIDO: eliminar línea que mezcla grid con place
        self.n2 = Entry(self.ven)
        self.n2.place(x=250, y=75)
        b1 = Button(self.ven, text="Agregar", command=self.agregar)
        b1.place(x=100, y=110)
        b2 = Button(self.ven, text="Mayor", command=self.mayor)
        b2.place(x=180, y=110)
        b3 = Button(self.ven, text="Menor", command=self.menor)  # CORREGIDO: command corregido
        b3.place(x=250, y=110)
        b4 = Button(self.ven, text="Salir", command=self.salir)
        b4.place(x=320, y=110, width=50)
        self.listaElementos = Label(self.ven, text="")
        self.listaElementos.place(x=150, y=180)
        self.listview = Listbox(self.ven, height=10, width=15, bg='black', 
                               activestyle='dotbox', fg="white")
        self.listview.place(x=410, y=20)  # CORREGIDO: x minúscula
        self.ven.mainloop()

    def mayor(self):
        if len(self.lista) > 0:
            self.aux1 = self.lista[0]
            for i in self.lista:
                if i > self.aux1:
                    self.aux1 = i
            messagebox.showinfo('El mayor', f'El número mayor es: {self.aux1}')  # CORREGIDO: mensaje mejorado
        else:
            messagebox.showerror("Error", "La lista esta vacia")

    def menor(self):
        if len(self.lista) > 0:
            self.aux2 = self.lista[0]
            for i in self.lista:
                if i < self.aux2:
                    self.aux2 = i
            print(f'el menor es {self.aux2}')
            messagebox.showinfo('El menor', f'El número menor es: {self.aux2}')  # CORREGIDO: "menor" corregido
        else:
            messagebox.showerror("Error", "La lista esta vacia")

    def agregar(self):
        try:
            # Generar números aleatorios en lugar de usar los campos de entrada
            valor1 = random.randint(1, 100)
            valor2 = random.randint(1, 100)
            
            # Agregar a la lista y Listbox
            self.lista.append(valor1)
            self.lista.append(valor2)
            self.listview.insert(END, valor1)  # CORREGIDO: usar END en lugar de size()+1
            self.listview.insert(END, valor2)
            
            # Actualizar label
            self.listaElementos.config(text=f'{self.lista}')  # CORREGIDO: text minúscula
            
            # Inicializar aux2 si es la primera vez
            if len(self.lista) == 2:
                self.aux2 = self.lista[0]
                
            print(self.lista)
           
        except ValueError:
            messagebox.showerror("Error", "Algún dato no es numero")

    def salir(self):
        self.ven.destroy()

if __name__ == '__main__':
    app = Principal()